var imagoCart;imagoCart=function(){function t(t){return{replace:!0,scope:{min:"=",max:"=",ngModel:"="},transclude:!0,controllerAs:"cart",templateUrl:"/imago/imago-cart.html",controller:function(){return this.utils=t}}}return t}(),angular.module("imago").directive("imagoCart",["imagoCart",imagoCart]);var imagoCart,bind=function(t,i){return function(){return t.apply(i,arguments)}},indexOf=[].indexOf||function(t){for(var i=0,e=this.length;e>i;i++)if(i in this&&this[i]===t)return i;return-1};imagoCart=function(){function t(t,i,e,r,n,a){var s,o;this.$q=t,this.$window=i,this.$http=e,this.imagoUtils=r,this.imagoModel=n,this.imagoSettings=a,this.remove=bind(this.remove,this),this.update=bind(this.update,this),this.create=bind(this.create,this),this.checkCart=bind(this.checkCart,this),this.checkStatus=bind(this.checkStatus,this),this.checkCurrency=bind(this.checkCurrency,this),this.cart={items:[]},s=localStorage.getItem("imagoCart"),o=[],s&&o.push(this.checkStatus(s)),o.push(this.checkCurrency()),this.$q.all(o).then(function(t){return function(){return t.cart.currency!==t.currency?(t.cart.currency=angular.copy(t.currency),t.update()):void 0}}(this))}return t.prototype.show=!1,t.prototype.checkCurrency=function(){var t,i;return t=this.$q.defer(),i=[],i.push(this.$http.get("//www.telize.com/geoip",{headers:{NexClient:void 0,NexTenant:void 0}}).then(function(t){return function(i){return t.telize=i.data}}(this))),i.push(this.$http.get(this.imagoSettings.host+"/api/settings").then(function(t){return function(i){var e;return e=_.find(i.data,{name:"currencies"}),t.currencies=e.value}}(this))),this.$q.all(i).then(function(i){return function(){var e;return e=i.imagoUtils.CURRENCY_MAPPING[i.telize.country],indexOf.call(i.currencies,e)>=0?i.currency=e:i.currencies.length?i.currency=i.currencies[0]:console.log("you need to enable at least one currency in the settings"),t.resolve()}}(this)),t.promise},t.prototype.checkStatus=function(t){var i;return i=this.$q.defer(),this.$http.get(this.imagoSettings.host+"/api/carts?cartid="+t).then(function(t){return function(e){return console.log("check cart",e.data),_.assign(t.cart,e.data),i.resolve()}}(this)),i.promise},t.prototype.checkCart=function(){var t;return t=this.$q.defer(),this.cart._id?t.resolve("update"):this.create(this.cart).then(function(i){return function(e){return _.assign(i.cart,e.data),localStorage.setItem("imagoCart",e.data._id),t.resolve("created")}}(this)),t.promise},t.prototype.create=function(t){return this.$http.post(this.imagoSettings.host+"/api/carts",t)},t.prototype.add=function(t,i){var e,r,n,a,s,o;if(!t)return console.log("item required");if(!t.qty)return console.log("quantity required");if(_.isArray(i)&&(null!=i?i.length:void 0))for(t.options={},n=0,a=i.length;a>n;n++)s=i[n],t.options[s]=t.fields[s];else _.isPlainObject(i)&&(t.options=i);return o=this.imagoModel.find({_id:t.parent}),t.options.name&&(t.name=t.options.name,delete t.options.name),o&&(t.name||(t.name=o.name),t.serving_url||(t.serving_url=o.serving_url)),e=angular.copy(t),r=_.find(this.cart.items,{_id:e._id}),r?(r.name||(r.name=e.name),r.qty+=e.qty):this.cart.items.push(e),this.show=!0,this.checkCart().then(function(t){return function(i){return"update"===i?t.update():void 0}}(this))},t.prototype.update=function(){return this.cart._id?this.$http.put(this.imagoSettings.host+"/api/carts/"+this.cart._id,this.cart):void 0},t.prototype.remove=function(t){var i;return i=_.findIndex(this.cart.items,{_id:t._id}),this.cart.items.splice(i,1),this.update()},t.prototype.checkout=function(){return tenant?this.$window.location.href="https://"+tenant+".2.imagoapp.com/account/checkout/"+this.cart._id:void 0},t}(),angular.module("imago").service("imagoCart",["$q","$window","$http","imagoUtils","imagoModel","imagoSettings",imagoCart]);var VariantsStorage;VariantsStorage=function(){function t(t,i,e,r){this.$http=t,this.$q=i,this.imagoModel=e,this.imagoSettings=r}return t.prototype.data=[],t.prototype.search=function(t){return this.$http.get(this.imagoSettings.host+"/api/variants/"+t)},t.prototype.get=function(t){var i,e,r;return r=this.$q.defer(),i=this.imagoModel.find({_id:t}),e=_.filter(this.data,{parent:t}),(null!=i?i.variants.length:void 0)===e.length?r.resolve(e):this.search(t).then(function(t){return r.resolve(t.data)}),r.promise},t}(),angular.module("imago").service("variantsStorage",["$http","$q","imagoModel","imagoSettings",VariantsStorage]),angular.module("imago").run(["$templateCache",function(t){t.put("/imago/imago-cart.html",'<div class="cart"><div ng-click="cart.utils.show = !cart.utils.show" class="icon"><div ng-bind="cart.utils.cart.items.length" class="counter"></div></div><div ng-show="cart.utils.show" class="box"><div ng-transclude="ng-transclude"></div><div ng-show="cart.utils.cart.items.length" class="itemnumber">{{cart.utils.cart.items.length}} items</div><div ng-show="cart.utils.cart.items.length === 0" class="noitems">no items in cart</div><button ng-show="cart.utils.cart.items.length" type="submit" ng-click="cart.utils.checkout()" class="checkout">checkout</button></div></div>')}]);